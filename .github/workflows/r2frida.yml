name: Build r2frida Android ARM64

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      FRIDA_VER: "17.3.2"
      ANDROID_API: "33"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install build dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential git pkg-config python3 python3-pip clang libssl-dev libelf-dev unzip curl xz-utils
        pip3 install --user meson ninja
        echo "::add-path::${HOME}/.local/bin" || true

    - name: Download Android NDK
      run: |
        curl -LO https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
        unzip -q android-ndk-r25c-linux.zip -d $GITHUB_WORKSPACE/android-ndk
      # set ANDROID_NDK_HOME to the extracted subfolder for future steps
    - name: Export NDK env
      run: |
        echo "ANDROID_NDK_HOME=${GITHUB_WORKSPACE}/android-ndk/android-ndk-r25c" >> $GITHUB_ENV
        echo "PATH=${GITHUB_WORKSPACE}/android-ndk/android-ndk-r25c/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH}" >> $GITHUB_ENV

    - name: Set cross compiler env vars
      run: |
        # create clang wrappers variables for API
        echo "CC=${GITHUB_WORKSPACE}/android-ndk/android-ndk-r25c/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android${ANDROID_API}-clang" >> $GITHUB_ENV
        echo "CXX=${GITHUB_WORKSPACE}/android-ndk/android-ndk-r25c/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android${ANDROID_API}-clang++" >> $GITHUB_ENV
        # useful tools
        echo "AR=llvm-ar" >> $GITHUB_ENV
        echo "RANLIB=llvm-ranlib" >> $GITHUB_ENV

    - name: Clone radare2 and build (install into workspace)
      run: |
        git clone --depth=1 https://github.com/radareorg/radare2.git
        cd radare2
        ./sys/install.sh
        # install goes to /usr/local by default; ensure pkg-config finds it
        echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig" >> $GITHUB_ENV
        # make r2 and r2pm available
        echo "PATH=/usr/local/bin:${PATH}" >> $GITHUB_ENV
      env:
        PATH: ${{ env.PATH }}

    - name: Prepare frida devkit for android (ext/frida)
      run: |
        git clone --depth=1 --recursive https://github.com/nowsecure/r2frida.git
        cd r2frida
        mkdir -p ext
        cd ext
        FRIDA_TGZ="frida-core-devkit-${FRIDA_VER}-android-arm64.tar.xz"
        curl -L -o ${FRIDA_TGZ} "https://github.com/frida/frida/releases/download/${FRIDA_VER}/${FRIDA_TGZ}"
        mkdir -p frida-android-${FRIDA_VER}
        tar -xJf ${FRIDA_TGZ} -C frida-android-${FRIDA_VER} --strip-components=1
        ln -sf frida-android-${FRIDA_VER} frida
        cd ../..

    - name: Build r2frida (cross compile)
      run: |
        cd r2frida
        make clean || true
        rm -rf node_modules
        export R2PM_OFFLINE=1
        # ensure r2/r2pm and pkg-config are found (from earlier radare2 install)
        export PATH=/usr/local/bin:$PATH
        export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig
        # pass CC/CXX from environment persisted in previous steps via GITHUB_ENV
        make io_frida.so
      env:
        # CC/CXX will be read from GITHUB_ENV; set fallback too
        CC: ${{ env.CC }}
        CXX: ${{ env.CXX }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: r2frida-android-arm64
        path: r2frida/src/io_frida.so
